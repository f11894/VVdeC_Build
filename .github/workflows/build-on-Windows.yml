name: Build on Windows

on: [push, pull_request]

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        branch: [v1.3.0]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Install dependencies
      shell: cmd
      run: |
        C:\msys64\usr\bin\bash -lc "pacman -S mingw-w64-x86_64-nasm mingw-w64-x86_64-yasm mingw-w64-x86_64-meson mingw-w64-x86_64-ninja --noconfirm"
    - name: build
      shell: cmd
      run: |
        set MSYSTEM=MINGW64
        set HOME=${{ github.workspace }}
        set CFLAGS=-flto -v
        set CXXFLAGS=%CFLAGS%
        set LDFLAGS=-static -static-libgcc -static-libstdc++ -flto -s
        git clone --depth 1 -b ${{ matrix.branch }} https://github.com/fraunhoferhhi/vvdec
        C:\msys64\usr\bin\bash -lc "cd vvdec && mkdir gcc_cmake && cd gcc_cmake && cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release"
        C:\msys64\usr\bin\bash -lc "cd vvdec/gcc_cmake && ninja"
        copy /y vvdec\bin\release-static\*.exe .\
        copy /y vvdec\LICENSE.txt LICENSE.txt
        7z a "VVdeC_${{ matrix.branch }}.7z" *.exe LICENSE.txt
    - name: Upload result
      uses: actions/upload-artifact@v2
      with:
        name: VVdeC_${{ matrix.branch }}
        path: |
          VVdeC_*.7z

  create_release:
    name: Create release
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    
    - uses: actions/download-artifact@v2
      with:
        name: VVdeC
        path: artifacts
    
    - name: Get Date
      id: get_date
      run: |
        DATE_TIME=`date +'%Y-%m-%d-%H-%M-%S'`
        echo "::set-output name=DATE_TIME::${DATE_TIME}"        
    # https://github.com/Mr-Ojii/L-SMASH-Works-Auto-Builds
    - name: Create a Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        RELEASE_NAME=Build-${{ steps.get_date.outputs.DATE_TIME }}
        TAG_NAME=build-${{ steps.get_date.outputs.DATE_TIME }}
        assets=()
        for asset in ${{ github.workspace }}/artifacts/*.7z; do
          assets+=("-a" "$asset")
        done
        hub release create "${assets[@]}" -m "$RELEASE_NAME" "$TAG_NAME"
